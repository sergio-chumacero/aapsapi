# Generated by Django 2.1.7 on 2019-02-22 23:56

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('performance', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Expense',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('expense_type', models.CharField(choices=[('operativos', 'Operativos'), ('administrativos', 'Administrativos'), ('financieros', 'Financieros'), ('otros', 'Otros')], default='otros', help_text='Tipo del gasto.', max_length=32, verbose_name='tipo')),
                ('description', models.CharField(help_text='Descripción del gasto.', max_length=256, verbose_name='descripción')),
                ('value', models.FloatField(help_text='Valor en bolivianos del gasto.', verbose_name='valor (Bs.)')),
            ],
            options={
                'verbose_name': 'Gasto POA',
                'verbose_name_plural': 'Gastos POAs',
                'ordering': ['poa', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Goal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Descripción de la meta.', max_length=256, verbose_name='descripción')),
                ('value', models.FloatField(help_text='Valor de la meta.', verbose_name='valor')),
                ('val_description', models.CharField(blank=True, help_text='Descripción de lo que representa el valor de la meta (ejemplo: más de X conexiones nuevas de agua potable o simplemente ">").', max_length=64, null=True, verbose_name='descripción del valor')),
                ('unit', models.CharField(help_text='Unidad de la meta.', max_length=64, verbose_name='unidad')),
            ],
            options={
                'verbose_name': 'Meta de expansión POA',
                'verbose_name_plural': 'Metas de expansión POAs',
                'ordering': ['poa', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Income',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('income_type', models.CharField(choices=[('op_ap', 'Operativos - Agua Potable'), ('op_alc', 'Operativos - Alcantarillado'), ('op_otros', 'Operativos - Otros'), ('no_op', 'No Operativos'), ('otros', 'Otros')], default='otros', help_text='Tipo del ingreso.', max_length=16, verbose_name='tipo')),
                ('description', models.CharField(help_text='Descripción del ingreso.', max_length=256, verbose_name='descripción')),
                ('value', models.FloatField(help_text='Valor en bolivianos del ingreso.', verbose_name='valor (Bs.)')),
            ],
            options={
                'verbose_name': 'Ingreso POA',
                'verbose_name_plural': 'Ingresos POAs',
                'ordering': ['poa', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Investment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(help_text='Descripción de la inversión.', max_length=256, verbose_name='descripción')),
                ('value', models.FloatField(help_text='Valor en bolivianos de la inversión.', verbose_name='valor (Bs.)')),
            ],
            options={
                'verbose_name': 'Inversión POA',
                'verbose_name_plural': 'Inversiones POAs',
                'ordering': ['poa', 'id'],
            },
        ),
        migrations.CreateModel(
            name='Plan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2019, help_text='Primer año de vigencia del PTDS', validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Año Inicial')),
                ('plan_type', models.CharField(choices=[('pdq', 'PDQ'), ('ptds', 'PTDS')], default='pdq', help_text='Tipo del plan (PDQ o PTDS).', max_length=8, verbose_name='tipo de plan')),
                ('epsa', models.ForeignKey(help_text='EPSA que reporta el PTDS', on_delete=django.db.models.deletion.CASCADE, related_name='ptds', to='performance.EPSA', verbose_name='EPSA')),
            ],
            options={
                'verbose_name': 'PDQ/PTDS',
                'verbose_name_plural': 'PDQs/PTDS',
                'ordering': ['epsa__code', 'year'],
            },
        ),
        migrations.CreateModel(
            name='PlanGoal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2019, help_text='año del plan', validators=[django.core.validators.MinValueValidator(1900)], verbose_name='año')),
                ('description', models.CharField(help_text='Descripción de la meta.', max_length=256, verbose_name='descripción')),
                ('value', models.FloatField(help_text='Valor de la meta.', verbose_name='valor')),
                ('val_description', models.CharField(blank=True, help_text='Descripción de lo que representa el valor de la meta (ejemplo: más de X conexiones nuevas de agua potable o simplemente ">").', max_length=64, null=True, verbose_name='descripción del valor')),
                ('unit', models.CharField(help_text='Unidad de la meta.', max_length=64, verbose_name='unidad')),
                ('plan', models.ForeignKey(help_text='PDQ/PTDS al cual pertenece la meta.', on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='planning.Plan', verbose_name='PDQ/PTDS')),
            ],
            options={
                'verbose_name': 'Meta de expansión PDQ/PTDS',
                'verbose_name_plural': 'Metas de expansión PDQ/PTDS',
                'ordering': ['plan', 'id'],
            },
        ),
        migrations.CreateModel(
            name='POA',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.IntegerField(default=2019, help_text='Año de reporte', validators=[django.core.validators.MinValueValidator(1900)], verbose_name='Año')),
                ('order', models.IntegerField(default=1, help_text='Orden del POA (inicial:1, reprogramado:2-5)', validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Orden')),
                ('epsa', models.ForeignKey(help_text='EPSA que reporta el POA', on_delete=django.db.models.deletion.CASCADE, related_name='poas', to='performance.EPSA', verbose_name='EPSA')),
            ],
            options={
                'verbose_name': 'POA',
                'verbose_name_plural': 'POAs',
                'ordering': ['epsa__code', 'year', 'order'],
            },
        ),
        migrations.AddField(
            model_name='investment',
            name='poa',
            field=models.ForeignKey(help_text='POA al cual pertenece la inversión.', on_delete=django.db.models.deletion.CASCADE, related_name='investments', to='planning.POA', verbose_name='POA'),
        ),
        migrations.AddField(
            model_name='income',
            name='poa',
            field=models.ForeignKey(help_text='POA al cual pertenece el ingreso.', on_delete=django.db.models.deletion.CASCADE, related_name='incomes', to='planning.POA', verbose_name='POA'),
        ),
        migrations.AddField(
            model_name='goal',
            name='poa',
            field=models.ForeignKey(help_text='POA al cual pertenece la meta.', on_delete=django.db.models.deletion.CASCADE, related_name='goals', to='planning.POA', verbose_name='POA'),
        ),
        migrations.AddField(
            model_name='expense',
            name='poa',
            field=models.ForeignKey(help_text='POA al cual pertenece el gasto.', on_delete=django.db.models.deletion.CASCADE, related_name='expenses', to='planning.POA', verbose_name='POA'),
        ),
        migrations.AlterUniqueTogether(
            name='poa',
            unique_together={('epsa', 'year', 'order')},
        ),
        migrations.AlterUniqueTogether(
            name='plan',
            unique_together={('epsa', 'year')},
        ),
    ]
